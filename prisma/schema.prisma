// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int        @id @default(autoincrement())
  username    String     @unique
  password    String     @db.Text
  credit      Decimal    @default(0.00) @db.Decimal(10, 2)
  totalCredit Decimal    @default(0.00) @db.Decimal(10, 2)
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt
  TopupLog    TopupLog[]
}

model TopupLog {
  id        Int     @id @default(autoincrement())
  userId    Int
  amount    Decimal @db.Decimal(10, 2)
  reference String
  image     String
  user      Users   @relation(fields: [userId], references: [id])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  price       Decimal      @db.Decimal(10, 2)
  image       String
  categoryId  Int
  category    Category     @relation(fields: [categoryId], references: [id])
  subProducts SubProduct[]
}

model SubProduct {
  id              Int               @id @default(autoincrement())
  productId       Int
  name            String
  price           Decimal           @db.Decimal(10, 2)
  product         Product           @relation(fields: [productId], references: [id])
  SubProductStock SubProductStock[]
}

enum Status {
  PENDING
  SOLDOUT
  REFUNDED
}

model SubProductStock {
  id           Int        @id @default(autoincrement())
  subProductId Int
  data         String     @db.Text
  status       Status     @default(PENDING)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  subProduct   SubProduct @relation(fields: [subProductId], references: [id])
}
