generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int        @id @default(autoincrement())
  username    String     @unique
  password    String     @db.Text
  credit      Decimal    @default(0.00) @db.Decimal(10, 2)
  totalCredit Decimal    @default(0.00) @db.Decimal(10, 2)
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt
  TopupLog    TopupLog[]
}

model TopupLog {
  id        Int     @id @default(autoincrement())
  userId    Int
  amount    Decimal @db.Decimal(10, 2)
  reference String
  image     String
  user      Users   @relation(fields: [userId], references: [id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  image        String
  price        Decimal        @db.Decimal(11, 2)
  categoryId   Int
  isDeleted    Boolean        @default(false)
  category     Category       @relation(fields: [categoryId], references: [id])
  ProductStock ProductStock[]
}

model ProductStock {
  id        Int      @id @default(autoincrement())
  productId Int
  data      String   @db.Text
  status    Status   @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  product   Product  @relation(fields: [productId], references: [id])
}

model AdminAccount {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String    @db.Text
  fullName  String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      AdminRole @default(STAFF)
}

enum Status {
  PENDING
  SOLDOUT
  REFUNDED
}

enum AdminRole {
  MASTER
  STAFF
}
