generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model adminaccount {
  id        Int               @id @default(autoincrement())
  username  String            @unique(map: "AdminAccount_username_key")
  password  String            @db.Text
  fullName  String
  isActive  Boolean           @default(true)
  createdAt DateTime          @default(now())
  updatedAt DateTime
  role      adminaccount_role @default(STAFF)
}

model category {
  id        Int       @id @default(autoincrement())
  name      String    @unique(map: "Category_name_key")
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  product   product[]
}

model product {
  id                      Int                       @id @default(autoincrement())
  name                    String
  description             String
  image                   String
  price                   Decimal                   @db.Decimal(11, 2)
  categoryId              Int
  isDeleted               Boolean                   @default(false)
  stock                   Int                       @default(0)
  category                category                  @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  product_stock           ProductStock[]
  transaction_buy_product transaction_buy_product[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model ProductStock {
  id        Int     @id @default(autoincrement())
  productId Int
  stock     Int
  product   product @relation(fields: [productId], references: [id], map: "ProductStock_productId_fkey")

  @@index([productId], map: "ProductStock_productId_fkey")
  @@map("product_stock")
}

model topuplog {
  id        Int     @id @default(autoincrement())
  userId    Int
  amount    Decimal @db.Decimal(10, 2)
  reference String
  image     String
  users     users   @relation(fields: [userId], references: [id], map: "TopupLog_userId_fkey")

  @@index([userId], map: "TopupLog_userId_fkey")
}

model transaction_buy_product {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime
  product   product  @relation(fields: [productId], references: [id], map: "TransactionBuyProduct_productId_fkey")
  users     users    @relation(fields: [userId], references: [id], map: "TransactionBuyProduct_userId_fkey")

  @@index([productId], map: "TransactionBuyProduct_productId_fkey")
  @@index([userId], map: "TransactionBuyProduct_userId_fkey")
}

model users {
  id                      Int                       @id @default(autoincrement())
  username                String                    @unique(map: "Users_username_key")
  password                String                    @db.Text
  credit                  Decimal                   @default(0.00) @db.Decimal(10, 2)
  totalCredit             Decimal                   @default(0.00) @db.Decimal(10, 2)
  createAt                DateTime                  @default(now())
  updateAt                DateTime
  topuplog                topuplog[]
  transaction_buy_product transaction_buy_product[]
}

enum adminaccount_role {
  MASTER
  STAFF
}
