generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id      Int       @id @default(autoincrement())
  name    String    @unique(map: "Category_name_key")
  product product[]
}

model product {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  price       Decimal      @db.Decimal(10, 2)
  image       String
  categoryId  Int
  category    category     @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  subproduct  subproduct[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model subproduct {
  id              Int               @id @default(autoincrement())
  productId       Int
  name            String
  price           Decimal           @db.Decimal(10, 2)
  product         product           @relation(fields: [productId], references: [id], map: "SubProduct_productId_fkey")
  subproductstock subproductstock[]

  @@index([productId], map: "SubProduct_productId_fkey")
}

model subproductstock {
  id           Int                    @id @default(autoincrement())
  subProductId Int
  data         String                 @db.Text
  status       subproductstock_status @default(PENDING)
  createdAt    DateTime               @default(now())
  updatedAt    DateTime
  subproduct   subproduct             @relation(fields: [subProductId], references: [id], map: "SubProductStock_subProductId_fkey")

  @@index([subProductId], map: "SubProductStock_subProductId_fkey")
}

model topuplog {
  id        Int     @id @default(autoincrement())
  userId    Int
  amount    Decimal @db.Decimal(10, 2)
  reference String
  image     String
  users     users   @relation(fields: [userId], references: [id], map: "TopupLog_userId_fkey")

  @@index([userId], map: "TopupLog_userId_fkey")
}

model users {
  id          Int        @id @default(autoincrement())
  username    String     @unique(map: "Users_username_key")
  password    String     @db.Text
  credit      Decimal    @default(0.00) @db.Decimal(10, 2)
  totalCredit Decimal    @default(0.00) @db.Decimal(10, 2)
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt()
  topuplog    topuplog[]
}

enum subproductstock_status {
  PENDING
  SOLDOUT
  REFUNDED
}
